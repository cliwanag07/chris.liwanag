(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[974],{3618:(e,t,a)=>{Promise.resolve().then(a.bind(a,4771)),Promise.resolve().then(a.t.bind(a,3063,23))},4771:(e,t,a)=>{"use strict";a.d(t,{default:()=>h});var i=a(5155),n=a(2115),r=a(7863),o=a(6474);let s=[{contribution:"Gameplay Contributions",highlights:["Implemented procedural labyrinth generation system with configurable room counts, hallway depth, and seeded randomness","Designed a modular interaction system adaptable to any interaction type (e.g., NPCs, objects, environment)","Built an item slot system for inventory and equipment mechanics"]},{contribution:"Tools Contributions",highlights:["Created Room/Hallway Layout Tool (Unity Editor extension) with procedural options, custom inspectors, and automatic ScriptableObject/prefab linking - reduced new room creation time from 15 minutes to <1 minute","Developed CSV Importer Tool integrated with Confluence - supports 100+ entries in under 5 seconds, complete with update/create/delete logs and type validation","Built a custom logger for targeted debugging by category/region"]},{contribution:"Leadership & Pipeline",highlights:["Established Jira/Confluence workflows with GitHub integration","Authored and maintained documentation for all tools; encouraged team-wide documentation practices"]}],l=[{contribution:"Gameplay Contributions",highlights:["Implemented item/inventory system with slot-based mechanics","Built interaction and dialogue manager systems in Unity."]},{contribution:"AI & Tools Contributions",highlights:["Developed a Python FastAPI backend to handle RAG-based NPC dialogue retrieval","Integrated Unity-Python communication for contextual AI prompts using both general knowledge databases and character-specific databases","Packaged backend with environment freezing for easy distribution and deployment"]}],d=[{contribution:"Gameplay Contributions",highlights:["Developed entire Poker game logic in Unity (TexasHoldemManager, UI, game state handling)","Designed clean, modular C# architecture for game flow and front-end systems"]},{contribution:"AI & Tools Contributions",highlights:["Implemented Flask-based backend running Monte Carlo simulations for AI decision-making","Integrated DeepFace facial recognition to factor in player emotions as part of AI evaluation","Delivered packaged backend using environment freezing for Windows distribution"]}],m=[{contribution:"Gameplay Contributions",highlights:["Implemented inventory system with stacking, max stacks, and slot management","Designed and programmed enemy and boss AI, including combat behaviors","Built character movement and abilities (mobility skills, combat interactions)"]},{contribution:"Leadership & Pipeline",highlights:["Directed a team of 6 through core gameplay development using Agile practices","Balanced both technical implementation (C++/Blueprints) and team management"]}],c=e=>{let{overview:t}=e;return(0,i.jsxs)("div",{className:"mb-4",children:[(0,i.jsxs)("div",{className:"flex flex-col md:flex-row md:items-start md:justify-between",children:[(0,i.jsx)("h3",{className:"font-semibold text-gray-900 dark:text-white text-center md:text-left",style:{fontSize:"clamp(1.3rem, 2.5vw, 1.9rem)"},children:t.name}),(0,i.jsx)("span",{className:"text-sm text-gray-500 dark:text-gray-400 mt-1 md:mt-0",children:t.period})]}),(0,i.jsxs)("p",{className:"text-sm font-medium text-gray-600 dark:text-gray-300 mt-1",children:[t.role," â€¢ Team Size: ",t.teamSize]}),(0,i.jsx)("p",{className:"text-sm text-gray-600 dark:text-gray-400 mt-2 leading-relaxed",children:t.overview}),(0,i.jsx)("div",{className:"flex flex-wrap gap-2 mt-2",children:t.tech.map(e=>(0,i.jsx)("span",{className:"px-2 py-0.5 rounded-full text-xs font-medium bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300",children:e},e))})]})},g=e=>{let{overview:t,contributions:a}=e,[s,l]=(0,n.useState)(!0);return(0,i.jsxs)("div",{children:[(0,i.jsx)(c,{overview:t}),(0,i.jsx)("button",{onClick:()=>l(e=>!e),className:"flex items-center gap-1 text-sm font-medium text-blue-600 dark:text-blue-400 hover:underline",children:s?(0,i.jsxs)(i.Fragment,{children:["Hide Contributions ",(0,i.jsx)(r.A,{size:16})]}):(0,i.jsxs)(i.Fragment,{children:["Show Contributions ",(0,i.jsx)(o.A,{size:16})]})}),s&&(0,i.jsx)("div",{className:"flex flex-col gap-6 mt-4",children:a.map(e=>(0,i.jsx)("div",{className:"relative",children:(0,i.jsxs)("div",{className:"relative pl-4 border-l-2 border-gray-200 dark:border-gray-700",children:[(0,i.jsx)("div",{className:"absolute -left-[5px] top-[10px] h-2.5 w-2.5 rounded-full bg-gray-300 dark:bg-gray-600"}),(0,i.jsxs)("div",{className:"space-y-1",children:[(0,i.jsx)("h4",{className:"text-md font-medium text-gray-900 dark:text-white",children:e.contribution}),(0,i.jsx)("ul",{className:"list-disc ml-5 text-sm text-gray-600 dark:text-gray-400 leading-relaxed",children:e.highlights.map((e,t)=>(0,i.jsx)("li",{children:e},t))})]})]})},e.contribution+e.highlights))})]})},h=()=>(0,i.jsx)("div",{className:"py-8 bg-white dark:bg-gray-900 px-6",children:(0,i.jsxs)("div",{className:"space-y-10 max-w-4xl mx-auto",children:[(0,i.jsxs)("div",{children:[(0,i.jsx)("h2",{className:"font-semibold text-gray-900 dark:text-white text-center md:text-left",style:{fontSize:"clamp(1.7rem, 3vw, 2.3rem)"},children:"Projects"}),(0,i.jsx)("div",{className:"h-px w-full bg-gray-200 dark:bg-gray-700 mt-2"})]}),(0,i.jsx)(g,{overview:{name:"Project Warden",role:"Team Lead / Tools Programmer / Gameplay Programmer",period:"May 2025 - Current",teamSize:"8",overview:"Project Warden is an isometric RPG focused on combat, exploration, and social interaction. Players assume the role of an imprisoned apothecary who must brew potions, fight monsters, and navigate a sprawling labyrinth. Live AI-driven NPC dialogue shapes relationships and story outcomes.",tech:["Unity","C#","Jira","Confluence","Git"]},contributions:s}),(0,i.jsx)(g,{overview:{name:"Boba Stop: Exploring AI-Generated Dialogue for NPCs",role:"Project Producer / Gameplay Programmer / AI Systems Programmer",period:"Sep 2024 - Apr 2025",teamSize:"3",overview:"Boba Stop is a capstone project and experiment in dynamic NPC interaction through AI-driven conversations. By leveraging Retrieval-Augmented Generation (RAG), NPCs adapt to prior interactions and evolve with the player's choices.",tech:["Unity","C#","FastAPI","PyTorch (Hugging Face)","RAG Models","Jira","Confluence","Git"]},contributions:l}),(0,i.jsx)(g,{overview:{name:"Poker-Faced",role:"Gameplay Programmer / Backend Programmer",period:"Jan 2025 - May 2025",teamSize:"4",overview:"Poker-Faced is a serious game designed to help players practice Poker strategy and stoicism. By integrating facial recognition and AI-driven simulations, the game trains players to maintain a neutral expression while playing against adaptive AI opponents.",tech:["Unity","C#","Python","Flask","Monte Carlo Simulation","DeepFace"]},contributions:d}),(0,i.jsx)(g,{overview:{name:"Echoes of Hubris",role:"Team Lead / Gameplay Programmer",period:"Jan 2024 - Current",teamSize:"6",overview:"Echoes of Hubris is a narrative-driven action Metroidvania set in a mysterious tower. Players control Pride, one of seven immortal Sins, as they ascend through vast environments, fight bosses, and uncover the truth of their existence.",tech:["Unreal Engine 5","C++","Jira","Confluence","Git"]},contributions:m})]})})}},e=>{e.O(0,[702,441,964,358],()=>e(e.s=3618)),_N_E=e.O()}]);